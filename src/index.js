async function getRickAndMortyCharacters() {

    return
    let allCharacters = [];
    let nextPage = 'https://rickandmortyapi.com/api/character';
    
    try {
        while (nextPage) {
            const response = await fetch(nextPage);
            const data = await response.json();
            
            allCharacters = allCharacters.concat(data.results);
            nextPage = data.info.next;
        }

        const characterContainer = document.getElementById('characterContainer');

        allCharacters.forEach(character => {
            const card = document.createElement('div');
            card.className = 'card';

            const img = document.createElement('img');
            img.src = character.image;
            img.alt = `${character.name}'s image`;

            const nameContainer = document.createElement('div');
            nameContainer.className = 'name-container';

            const name = document.createElement('h2');
            name.innerHTML = `
                
                ${character.name}
            `;

            



            // Additional icon as SVG
            const additionalIcon = document.createElement('svg');
            additionalIcon.className = 'additional-icon';
            additionalIcon.innerHTML = `
                <svg width="42" height="36" viewBox="0 0 42 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M42 11.625C42 24.75 22.5394 35.3738 21.7106 35.8125C21.4922 35.93 21.248 35.9915 21 35.9915C20.752 35.9915 20.5078 35.93 20.2894 35.8125C19.4606 35.3738 0 24.75 0 11.625C0.00347388 8.54292 1.22936 5.58808 3.40872 3.40872C5.58808 1.22936 8.54292 0.00347388 11.625 0C15.4969 0 18.8869 1.665 21 4.47937C23.1131 1.665 26.5031 0 30.375 0C33.4571 0.00347388 36.4119 1.22936 38.5913 3.40872C40.7706 5.58808 41.9965 8.54292 42 11.625Z" fill="#11B0C8"/>
                </svg>
            `;
            additionalIcon.addEventListener('click', (event) => {
                    const characterName = event.target.getAttribute('data-name');
                    alert(`Hola soy ${character.name}`);
                });

            nameContainer.appendChild(name);
            nameContainer.appendChild(additionalIcon);

            const status = document.createElement('p');
            status.innerHTML = `
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M15 8.00001C15 8.13262 14.9473 8.25979 14.8536 8.35356C14.7598 8.44733 14.6326 8.50001 14.5 8.50001H12.8088L10.4475 13.2238C10.4059 13.3068 10.342 13.3767 10.263 13.4255C10.184 13.4743 10.0929 13.5001 10 13.5H9.975C9.87801 13.4952 9.78452 13.4623 9.70594 13.4052C9.62736 13.3482 9.5671 13.2695 9.5325 13.1788L5.95937 3.79751L3.955 8.20688C3.91529 8.29426 3.85127 8.36836 3.77059 8.42034C3.68991 8.47231 3.59597 8.49997 3.5 8.50001H1.5C1.36739 8.50001 1.24021 8.44733 1.14645 8.35356C1.05268 8.25979 1 8.13262 1 8.00001C1 7.8674 1.05268 7.74022 1.14645 7.64646C1.24021 7.55269 1.36739 7.50001 1.5 7.50001H3.17812L5.545 2.29313C5.5858 2.20328 5.65229 2.12751 5.73607 2.07537C5.81985 2.02323 5.91719 1.99705 6.01583 2.00012C6.11447 2.00319 6.20999 2.03539 6.29036 2.09265C6.37074 2.1499 6.43237 2.22966 6.4675 2.32188L10.0619 11.7594L12.0525 7.77751C12.0939 7.69421 12.1577 7.6241 12.2368 7.57508C12.3158 7.52606 12.407 7.50006 12.5 7.50001H14.5C14.6326 7.50001 14.7598 7.55269 14.8536 7.64646C14.9473 7.74022 15 7.8674 15 8.00001Z" fill="#BFDE42"/>
                    </svg>
                Status: ${character.status}
            `;

            const species = document.createElement('p');
            species.innerHTML = `
                <svg width="12" height="14" viewBox="0 0 12 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M6 0C4.40926 0.0018196 2.88419 0.634545 1.75937 1.75937C0.634545 2.88419 0.0018196 4.40926 0 6C0 7.5 0.785 9.44125 2.10063 11.1875C3.42438 12.9469 4.88188 14 6 14C7.11812 14 8.57562 12.9494 9.89937 11.1875C11.215 9.4375 12 7.5 12 6C11.9982 4.40926 11.3655 2.88419 10.2406 1.75937C9.11581 0.634545 7.59074 0.0018196 6 0ZM9.10063 10.5887C8.015 12.0306 6.76938 13 6 13C5.23062 13 3.985 12.0306 2.89937 10.5887C1.72812 9.03125 1 7.27313 1 6C1 4.67392 1.52678 3.40215 2.46447 2.46447C3.40215 1.52678 4.67392 1 6 1C7.32608 1 8.59785 1.52678 9.53553 2.46447C10.4732 3.40215 11 4.67392 11 6C11 7.27313 10.2719 9.03125 9.10063 10.5887ZM5.5 7.5C5.5 6.83696 5.23661 6.20107 4.76777 5.73223C4.29893 5.26339 3.66304 5 3 5C2.73478 5 2.48043 5.10536 2.29289 5.29289C2.10536 5.48043 2 5.73478 2 6C2 6.66304 2.26339 7.29893 2.73223 7.76777C3.20107 8.23661 3.83696 8.5 4.5 8.5C4.76522 8.5 5.01957 8.39464 5.20711 8.20711C5.39464 8.01957 5.5 7.76522 5.5 7.5ZM3 6C3.39782 6 3.77936 6.15804 4.06066 6.43934C4.34196 6.72064 4.5 7.10218 4.5 7.5C4.10218 7.5 3.72064 7.34196 3.43934 7.06066C3.15804 6.77936 3 6.39782 3 6ZM9 5C8.33696 5 7.70107 5.26339 7.23223 5.73223C6.76339 6.20107 6.5 6.83696 6.5 7.5C6.5 7.76522 6.60536 8.01957 6.79289 8.20711C6.98043 8.39464 7.23478 8.5 7.5 8.5C7.8283 8.5 8.15339 8.43534 8.45671 8.3097C8.76002 8.18406 9.03562 7.99991 9.26777 7.76777C9.49991 7.53562 9.68406 7.26002 9.8097 6.95671C9.93534 6.65339 10 6.3283 10 6C10 5.73478 9.89464 5.48043 9.70711 5.29289C9.51957 5.10536 9.26522 5 9 5ZM7.5 7.5C7.5 7.10218 7.65804 6.72064 7.93934 6.43934C8.22064 6.15804 8.60218 6 9 6C9 6.39782 8.84196 6.77936 8.56066 7.06066C8.27936 7.34196 7.89782 7.5 7.5 7.5ZM7.5 10.5C7.5 10.6326 7.44732 10.7598 7.35355 10.8536C7.25979 10.9473 7.13261 11 7 11H5C4.86739 11 4.74021 10.9473 4.64645 10.8536C4.55268 10.7598 4.5 10.6326 4.5 10.5C4.5 10.3674 4.55268 10.2402 4.64645 10.1464C4.74021 10.0527 4.86739 10 5 10H7C7.13261 10 7.25979 10.0527 7.35355 10.1464C7.44732 10.2402 7.5 10.3674 7.5 10.5Z" fill="white"/>
                    </svg>
                Species: ${character.species}
            `;

            const origin = document.createElement('p');
            origin.innerHTML = `
                <svg width="16" height="12" viewBox="0 0 16 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M15.3194 1.7925C14.8412 0.968127 13.5794 0.782502 11.6631 1.25125C10.776 0.565278 9.7142 0.141862 8.59845 0.0291056C7.48271 -0.0836511 6.3577 0.118771 5.35124 0.613377C4.34478 1.10798 3.4972 1.87495 2.9048 2.82714C2.31241 3.77933 1.99893 4.87857 1.99999 6C2.00007 6.25723 2.01635 6.5142 2.04874 6.76938C0.318112 8.5625 0.343112 9.625 0.681237 10.2075C0.999987 10.76 1.66499 11 2.53999 11C3.1475 10.9874 3.75143 10.9035 4.33936 10.75C5.22662 11.4353 6.28825 11.8581 7.40371 11.9704C8.51917 12.0828 9.64378 11.8801 10.6498 11.3854C11.6559 10.8907 12.5031 10.1239 13.0953 9.17195C13.6875 8.22001 14.0009 7.1211 14 6C14.0001 5.74403 13.984 5.48831 13.9519 5.23438C14.7331 4.42188 15.2531 3.65 15.43 2.98938C15.5519 2.53188 15.515 2.12938 15.3194 1.7925ZM7.99999 1C9.13245 1.00117 10.2311 1.38621 11.1165 2.09227C12.0019 2.79833 12.6218 3.7837 12.875 4.8875C11.8087 5.89125 10.3656 6.92063 8.99561 7.70813C7.27374 8.69625 5.77999 9.3125 4.58874 9.65C3.85503 8.9657 3.34434 8.07636 3.12315 7.09776C2.90196 6.11915 2.98051 5.09663 3.34859 4.16329C3.71666 3.22996 4.3572 2.42906 5.18682 1.86486C6.01644 1.30066 6.9967 0.999295 7.99999 1ZM1.54624 9.70563C1.45499 9.54875 1.50561 9.25313 1.68499 8.89313C1.86237 8.55583 2.07818 8.24019 2.32811 7.9525C2.57586 8.67031 2.95762 9.33457 3.45311 9.91C2.37499 10.0913 1.70249 9.97563 1.54624 9.70563ZM7.99999 11C7.15694 11.0009 6.32756 10.7871 5.58999 10.3788C6.94379 9.89995 8.25006 9.29609 9.49186 8.575C10.8406 7.80063 12.0344 6.96125 12.9962 6.1325C12.9606 7.43447 12.4188 8.67126 11.4859 9.58014C10.553 10.489 9.30245 10.9984 7.99999 11ZM14.4637 2.73063C14.3575 3.125 14.0769 3.57625 13.6744 4.05125C13.4273 3.33258 13.0454 2.66759 12.5494 2.09188C13.4375 1.945 14.26 1.95625 14.4556 2.29438C14.5119 2.3925 14.515 2.53938 14.4637 2.73063Z" fill="white"/>
                    </svg>
                Origin: ${character.origin.name}
            `;



            card.appendChild(img);
            card.appendChild(nameContainer); // Append the name container to the card
            card.appendChild(status);
            card.appendChild(species);
            card.appendChild(origin);
            

            characterContainer.appendChild(card);
        });
    } catch (error) {
        console.error('Error fetching data from API:', error);
    }
}

getRickAndMortyCharacters();
